import tkinter as tk
from tkinter import messagebox, StringVar
import random
import string

def generate_password():
    try:
        length = int(length_var.get())
        if length <= 0:
            raise ValueError
    except ValueError:
        messagebox.showerror("–û—à–∏–±–∫–∞", "–î–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º —á–∏—Å–ª–æ–º!")
        return

    chars = ""
    if use_upper.get():
        chars += string.ascii_uppercase
    if use_lower.get():
        chars += string.ascii_lowercase
    if use_digits.get():
        chars += string.digits
    if use_symbols.get():
        chars += "!@#$%^&*()_+-=[]{}|;:,.<>?"

    if exclude_ambiguous.get():
        ambiguous = "0O1lI"
        chars = ''.join(c for c in chars if c not in ambiguous)

    if not chars:
        messagebox.showwarning("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ", "–í—ã–±–µ—Ä–∏—Ç–µ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ç–∏–ø —Å–∏–º–≤–æ–ª–æ–≤!")
        return

    password = ''.join(random.choice(chars) for _ in range(length))
    password_output.set(password)

def copy_to_clipboard():
    root.clipboard_clear()
    root.clipboard_append(password_output.get())
    messagebox.showinfo("–ì–æ—Ç–æ–≤–æ", "–ü–∞—Ä–æ–ª—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞!")

# –°–æ–∑–¥–∞—ë–º –æ–∫–Ω–æ
root = tk.Tk()
root.title("üîê –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–∞—Ä–æ–ª–µ–π")
root.geometry("400x300")
root.resizable(False, False)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
length_var = StringVar(value="12")
use_upper = tk.BooleanVar(value=True)
use_lower = tk.BooleanVar(value=True)
use_digits = tk.BooleanVar(value=True)
use_symbols = tk.BooleanVar(value=True)
exclude_ambiguous = tk.BooleanVar(value=False)
password_output = StringVar()

# –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
tk.Label(root, text="–î–ª–∏–Ω–∞ –ø–∞—Ä–æ–ª—è:").pack(pady=(10, 0))
tk.Entry(root, textvariable=length_var, width=10).pack()

tk.Checkbutton(root, text="–ó–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã (A-Z)", variable=use_upper).pack(anchor="w", padx=20)
tk.Checkbutton(root, text="–°—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã (a-z)", variable=use_lower).pack(anchor="w", padx=20)
tk.Checkbutton(root, text="–¶–∏—Ñ—Ä—ã (0-9)", variable=use_digits).pack(anchor="w", padx=20)
tk.Checkbutton(root, text="–°–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã (!@#$...)", variable=use_symbols).pack(anchor="w", padx=20)
tk.Checkbutton(root, text="–ò—Å–∫–ª—é—á–∏—Ç—å –ø–æ—Ö–æ–∂–∏–µ —Å–∏–º–≤–æ–ª—ã (0, O, 1, l...)", variable=exclude_ambiguous).pack(anchor="w", padx=20)

tk.Button(root, text="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∞—Ä–æ–ª—å", command=generate_password, bg="#4CAF50", fg="white").pack(pady=10)

tk.Entry(root, textvariable=password_output, width=50, justify="center", state="readonly").pack(pady=5)

tk.Button(root, text="–ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å", command=copy_to_clipboard).pack(pady=5)

# –ó–∞–ø—É—Å–∫
root.mainloop()
